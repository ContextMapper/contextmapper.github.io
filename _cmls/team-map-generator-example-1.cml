ContextMap InsuranceTeamMap {
	type = ORGANIZATIONAL
	state = TO_BE
	
	/* Add contexts that represent subsystems/components to this organizational map: */
	contains CustomerManagementContext, CustomerSelfServiceContext, PolicyManagementContext, RiskManagementContext

	/* Add teams to this organizational map: */
	contains CustomersBackofficeTeam, CustomersFrontofficeTeam, ContractsTeam
	
	/* Define the subsystem/component relationships: */

	CustomerSelfServiceContext [D,C]<-[U,S] CustomerManagementContext

	PolicyManagementContext [D,CF]<-[U,OHS,PL] CustomerManagementContext
		
	PolicyManagementContext [P]<->[P] RiskManagementContext

	/* Define the team relationships: */
	 
	CustomersBackofficeTeam [U,S]->[D,C] CustomersFrontofficeTeam
	
	CustomersBackofficeTeam [U]->[D] ContractsTeam
	
}

/* Team Definitions */
BoundedContext CustomersBackofficeTeam realizes CustomerManagementContext {
	type = TEAM
	domainVisionStatement = "This team is responsible for implementing the customers module in the back-office system."
}

BoundedContext CustomersFrontofficeTeam realizes CustomerSelfServiceContext {
	type = TEAM
	domainVisionStatement = "This team is responsible for implementing the front-office application for the insurance customers."
}

BoundedContext ContractsTeam realizes PolicyManagementContext, RiskManagementContext {
	type = TEAM
	domainVisionStatement = "This team is responsible for implementing the contract-, policy-, and risk-management modules in the back-office system."
}

/* Subsystem/component definitions */
BoundedContext CustomerManagementContext
BoundedContext CustomerSelfServiceContext
BoundedContext PolicyManagementContext
BoundedContext RiskManagementContext
